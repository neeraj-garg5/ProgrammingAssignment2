source("complete.R")
source(complete.R)
source("complete.R")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("7bfecb3cf0fb404cd32e", "5b916020956ec5976a8bef536e98d1f87e788a7b")
myapp <- oauth_app("csdregiserapp","7bfecb3cf0fb404cd32e", "5b916020956ec5976a8bef536e98d1f87e788a7b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
test <- content(req)
test1 <- jsonlite::fromJSON(toJSON(test))
install.packages("jsonlite")
test1 <- jsonlite::fromJSON(toJSON(test))
available.packages
available.packages()
head(test)
test1 <- jsonlite::fromJSON(toJSON(test))
library(jsonlite)
library("jsonlite")
install.packages("rjson")
test1 <- jsonlite::fromJSON(toJSON(test))
load(jsonlite)
available.packages()
load(jsonlite)
install.packages("jsonlite", repos="http://cran.r-project.org")
load(jsonlite)
load(jsonlite)
load(jsonlite)
library(jsonlite)
library("jsonlite")
library(jsonlite)
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time |  BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
set.seed(1)
rpois(5, 2)
?set.seed
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
q()
cells <- c(1,26,24,68)
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=TRUE)
mymatrix
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=FALSE)
mymatrix
solve(mymatrix)
solve(mymatrix)
source("cachematrix.R")
setwd("D:/DataScientistCoursera/datasciencecoursera/ProgrammingAssignment2")
source("cachematrix.R")
makeCacheMatrix(mymatrix)
a<- makeCacheMatrix()
a
a<- makeCacheMatrix(mymatrix)
a
a$set(matrix(1:4,2,2)
)
a
b <- a$set(matrix(1:4,2,2))
b
cacheSolve(b)
cacheSolve(a)
b <- a$set(mymatrix)
cacheSolve(a)
solve(mymatrix)
cacheSolve(a)
